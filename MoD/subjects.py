import random


def make_reply_text(caption, subjects):

    reply = caption
    reply += '\n\n'
    for subject in subjects:
        reply += " • " + subject + '\n'

    return reply


subjects = []

subjects_subtree = {}

start_answer = "Я бот, избавлю тебя от хлопот"

database = [
    {}, start_answer
]


# 1) ------ Методы динамического программирования ------
#
# Методы динамического программирования в информационных системах
# Методы динамического программирования в информационных системах управления персоналом
# Методы динамического программирования в системах анализа оригинальности текстов
# Методы динамического программирования в логистических системах


local_subjects = [
    'Методы динамического программирования в информационных системах',
    'Методы динамического программирования в информационных системах управления персоналом',
    'Методы динамического программирования в системах анализа оригинальности текстов',
    'Методы динамического программирования в логистических системах'
]

caption = 'Заголовочный текст для методов динамического программирования'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Динамическое программирование'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# 2) ------ Методы Монте-Карло ------
#
# Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики эпидемиологических процессов
# Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики уровня жизни
# Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики показателей образовательной сферы

local_subjects = [
    'Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики эпидемиологических процессов',
    'Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики уровня жизни',
    'Метод Монте-Карло по схеме марковских цепей в системах прогнозирования динамики показателей образовательной сферы'
]

caption = 'Заголовочный тект для методов Монте-Карло'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Методы Монте-Карло'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# 3) ------ Методы принятия решений в социальных сферах ------
#
# Модели общественного выбора и их анализ в контексте современного общества
# Модели рационирования и их использование для анализа проблем социального неравенства
# Методы анализа параметров участников учебного процесса в контексте их значимости
# Методы анализа поведения студента как участника учебного процесса
# Методы сценарного прогнозирования в анализе социально-политического развития на макро-уровне

local_subjects = [
    'Модели общественного выбора и их анализ в контексте современного общества',
    'Модели рационирования и их использование для анализа проблем социального неравенства',
    'Методы анализа параметров участников учебного процесса в контексте их значимости',
    'Методы анализа поведения студента как участника учебного процесса',
    'Методы сценарного прогнозирования в анализе социально-политического развития на макро-уровне',
]

caption = 'Заголовочный текст для социалОчки'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Социалочка'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# 4) ------ Программные реализации ------
#
# Программная реализация оптимизационного алгоритма
# Программная реализация алгоритма 'разъезженного пути" (метод Шульце)
# Методы принятия решений в условиях нечисловой, неполной и нечёткой информации (программная реализация)

local_subjects = [
    'Программная реализация оптимизационного алгоритма',
    'Программная реализация алгоритма \"разъезженного пути\" (метод Шульце)',
    'Методы принятия решений в условиях нечисловой, неполной и нечёткой информации (программная реализация)'
]

caption = 'Заголовочный текст для программных реализаций'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Программная реализация'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# 5) ------ Алгоритмизация ------
#
# Алгоритмы декомпозиции в решении оптимизационных задач (метод Данцига-Вульфа)
# Алгоритмы и методы анализа информации в системах принятия решений
# Байесовские методы машинного обучения

local_subjects = [
    'Алгоритмы декомпозиции в решении оптимизационных задач (метод Данцига-Вульфа)',
    'Алгоритмы и методы анализа информации в системах принятия решений',
    'Байесовские методы машинного обучения'
]

caption = 'Заголовочный текст для алгоритмиков'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Алгоритмы'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# 6) ------ Другое (но интересное) ------
#
# Блок-чейн технологии в современных финансовых системах
# Применение нейросетевых технологий в современных системах анализа потребительского выбора
# Модели и методы принятия решений в современном интернет-банкинге
# Современные технологии продвижения интернет-ресурсов (на примере телеграм-каналов)

local_subjects = [
    'Блок-чейн технологии в современных финансовых системах',
    'Применение нейросетевых технологий в современных системах анализа потребительского выбора',
    'Модели и методы принятия решений в современном интернет-банкинге',
    'Современные технологии продвижения интернет-ресурсов (на примере телеграм-каналов)'
]

caption = 'Заголовочный текстик для других (но интересных) тем'
local_reply = make_reply_text(caption, local_subjects)
button_name = 'Другое (но интересное)'
button = {button_name: local_reply}
subjects_subtree.update(button)

subjects.extend(local_subjects)

# Собираем всё вместе

subtree_name = 'Выбрать тему'
subtree_text = 'Список тем по категориям. Выберите одну'

subtree = {subtree_name: [subjects_subtree, subtree_text]}

database[0].update(subtree)


# Мне повезёт!!!

i_am_lucky_caption = "Мне повезёт!"
i_am_lucky_text = "Повезло!"

i_am_lucky = {i_am_lucky_caption: i_am_lucky_text}

database[0].update(i_am_lucky)


def i_am_lucky():

    index = random.random() * len(subjects) - 1
    reply = "Тебе действительно повезло!\n\n"
    reply += 'Вот твоя тема:\n\n'
    reply += " • " + subjects[int(index)]

    return reply


suggest_subject_caption = "Предложить новую тему"
suggest_subject_text = "Напиши тему, чтобы отправить её на рассмотрение. Помни, что краткость - сестра таланта." \
                       " Пожалуйста, не используй более 300 символов."


suggestion_subtree = {suggest_subject_caption: suggest_subject_text}

database[0].update(suggestion_subtree)
